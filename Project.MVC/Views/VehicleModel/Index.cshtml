@model IEnumerable<Project.MVC_.ViewModels.VehicleModelViewModel>
@{
    ViewBag.Title = "Vehicle Models";
}

<h2>Vehicle Models</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="mb-3">
    <a href="@Url.Action("Index", "VehicleMake")" class="btn btn-secondary">Back to Makes</a>
    <a href="@Url.Action("Create", "VehicleModel")" class="btn btn-primary">Create New Model</a>
</div>

@using (Html.BeginForm("Index", "VehicleModel", FormMethod.Get))
{
    <div class="form-inline mb-3">
        <label>Filter by Make:</label>
        @Html.DropDownList("makeId", ViewBag.Makes as SelectList, "All", new { onchange = "this.form.submit();", @class = "form-control mx-2" })
        <label>Search:</label>
        @Html.TextBox("search", ViewBag.CurrentFilter as string, new { @class = "form-control mx-2" })
        <button type="submit" class="btn btn-info">Search</button>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                <button type="button" class="btn btn-link p-0" onclick="location.href='@Url.Action("Index", new { sortOrder = ViewBag.CurrentSort == "name_desc" ? "" : "name_desc", search = ViewBag.CurrentFilter, makeId = Request["makeId"] })'">Name</button>
            </th>
            <th>
                <button type="button" class="btn btn-link p-0" onclick="location.href='@Url.Action("Index", new { sortOrder = ViewBag.CurrentSort == "abrv" ? "abrv_desc" : "abrv", search = ViewBag.CurrentFilter, makeId = Request["makeId"] })'">Abbreviation</button>
            </th>
            <th>Make</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Abrv</td>
                <td>@item.MakeName</td>
                <td>
                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-info btn-sm">Details</a>
                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    int page = ViewBag.Page ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalCount = ViewBag.TotalCount ?? 0;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    int nextPage = page + 1;
    int prevPage = page - 1;
}
<nav>
    <ul class="pagination">
        @if (page > 1)
        {
            <li><a class="btn btn-secondary" href="@Url.Action("Index", new { page = prevPage, search = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort, makeId = Request["makeId"] })">&laquo; Previous</a></li>
        }
        <li class="active"><span class="btn btn-light">@page</span></li>
        @if (page < totalPages)
        {
            <li><a class="btn btn-secondary" href="@Url.Action("Index", new { page = nextPage, search = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort, makeId = Request["makeId"] })">Next &raquo;</a></li>
        }
    </ul>
</nav>